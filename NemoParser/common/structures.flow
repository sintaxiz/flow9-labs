export {
    Description(var : Var, type : Type);

    Type ::= IntType, ArrIntType, BoolType;
    IntType();
    ArrIntType();
    BoolType();

    NemoVar ::= NemoInt, NemoBool, NemoArr;

    NemoInt(val : int);

    NemoBool(val : Bool); 
    Bool ::= True, False;
    True();
    False();

    NemoArr(arr : [int]);

    Expression ::= Operand, ArExp, FuncExp, Predicate;

    Operand ::= Int, Var;
    Int(val : int);
    Var(name : string);

    ArExp(l : Expression, r : Expression, operation : string);

    FuncExp ::= AppFunc, UpdFunc;
    AppFunc(arr : Expression, index: Expression);
    UpdFunc(arr : Expression, index: Expression, value: Expression);
    
    Predicate(l: Expression, r : Expression, relSign : string);

}